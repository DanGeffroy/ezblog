[{"id":1,"title":"title","text":"loremipsum toussa", "date":"Jeudi, 1 Juin 2017", "preview":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."},
  {"id":2,"title":"title2","text":"loremipsum toussa 2", "date":"Jeudi, 1 Juin 2017", "preview" : "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga"},
  {"id":3,
    "title":"title3",
    "text":"\r\n\r\nThis post examines the features of [R Markdown](http://www.rstudio.org/docs/authoring/using_markdown)\r\nusing [knitr](http://yihui.name/knitr/) in Rstudio 0.96.\r\nThis combination of tools provides an exciting improvement in usability for\r\n[reproducible analysis](http://stats.stackexchange.com/a/15006/183).\r\nSpecifically, this post\r\n(1) discusses getting started with R Markdown and `knitr` in  Rstudio 0.96;\r\n(2) provides a basic example of producing console output and plots using R Markdown;\r\n(3) highlights several code chunk options such as caching and controlling how input and output is displayed;\r\n(4) demonstrates use of standard Markdown notation as well as the extended features of formulas and tables; and\r\n(5) discusses the implications of R Markdown.\r\nThis post was produced with R Markdown. The source code is available here as a gist.\r\nThe post may be most useful if the source code and displayed post are viewed side by side.\r\nIn some instances, I include a copy of the R Markdown in the displayed HTML, but most of the time I assume you are reading the source and post side by side.\r\n\r\n<!-- more -->\r\n\r\n\r\n## Getting started\r\nTo work with R Markdown, if necessary:\r\n\r\n* Install [R](http://www.r-project.org/)\r\n* Install the lastest version of [RStudio](http://rstudio.org/download/) (at time of posting, this is 0.96)\r\n* Install the latest version of the `knitr` package: `install.packages(\"knitr\")`\r\n\r\nTo run the basic working example that produced this blog post:\r\n\r\n* Open R Studio, and go to File - New - R Markdown\r\n* If necessary install `ggplot2` and `lattice` packages: `install.packages(\"ggplot2\"); install.packages(\"lattice\") `\r\n* Paste in the contents of this gist (which contains the R Markdown file used to produce this post) and save the file with an `.rmd` extension\r\n* Click Knit HTML\r\n\r\n\r\n\r\n\r\n## Prepare for analyses\r\n```{r }\r\nset.seed(1234)\r\nlibrary(ggplot2)\r\nlibrary(lattice)\r\n```\r\n\r\n\r\n## Basic console output\r\nTo insert an R code chunk, you can type it manually or just press `Chunks - Insert chunks` or use the shortcut key. This will produce the following code chunk:\r\n\r\n    ```{r}\r\n\r\n    ```\r\n\r\nPressing tab when inside the braces will bring up code chunk options.\r\n\r\nThe following R code chunk labelled `basicconsole` is as follows:\r\n\r\n    ```{r }\r\n    x <- 1:10\r\n    y <- round(rnorm(10, x, 1), 2)\r\n    df <- data.frame(x, y)\r\n    df\r\n    ```\r\n\r\nThe code chunk input and output is then displayed as follows:\r\n\r\n```{r basicconsole}\r\nx <- 1:10\r\ny <- round(rnorm(10, x, 1), 2)\r\ndf <- data.frame(x, y)\r\ndf\r\n```\r\n\r\n## Plots\r\nImages generated by `knitr` are saved in a figures folder. However, they also appear to be represented in the HTML output using a [data URI scheme]( http://en.wikipedia.org/wiki/Data_URI_scheme). This means that you can paste the HTML into a blog post or discussion forum and you don't have to worry about finding a place to store the images; they're embedded in the HTML.\r\n\r\n### Simple plot\r\nHere is a basic plot using base graphics:\r\n\r\n    ```{r }\r\n    plot(x)\r\n    ```\r\n\r\n```{r simpleplot}\r\nplot(x)\r\n```\r\n\r\nNote that unlike traditional Sweave, there is no need to write `fig=TRUE`.\r\n\r\n\r\n### Multiple plots\r\nAlso, unlike traditional Sweave, you can include multiple plots in one code chunk:\r\n\r\n    ```{r }\r\n    boxplot(1:10~rep(1:2,5))\r\n    plot(x, y)\r\n    ```\r\n\r\n```{r multipleplots}\r\nboxplot(1:10~rep(1:2,5))\r\nplot(x, y)\r\n```\r\n\r\n### `ggplot2` plot\r\nGgplot2 plots work well:\r\n\r\n```{r ggplot2ex}\r\nqplot(x, y, data=df)\r\n```\r\n\r\n### `lattice` plot\r\nAs do lattice plots:\r\n\r\n```{r latticeex}\r\nxyplot(y~x)\r\n```\r\n\r\nNote that unlike traditional Sweave, there is no need to print lattice plots directly.\r\n\r\n## R Code chunk features\r\n### Create Markdown code from R\r\nThe following code hides the command input (i.e., `echo=FALSE`), and outputs the content directly as code (i.e., `results=asis`, which is similar to `results=tex` in Sweave).\r\n\r\n\r\n    ```{r , results='asis', echo=FALSE}\r\n    cat(\"Here are some dot points\\n\\n\")\r\n    cat(paste(\"* The value of y[\", 1:3, \"] is \", y[1:3], sep=\"\", collapse=\"\\n\"))\r\n    ```\r\n\r\n```{r dotpointprint, results='asis', echo=FALSE}\r\ncat(\"Here are some dot points\\n\\n\")\r\ncat(paste(\"* The value of y[\", 1:3, \"] is \", y[1:3], sep=\"\", collapse=\"\\n\"))\r\n```\r\n\r\n### Create Markdown table code from R\r\n    ```{r , results='asis', echo=FALSE}\r\n    cat(\"x | y\", \"--- | ---\", sep=\"\\n\")\r\n    cat(apply(df, 1, function(X) paste(X, collapse=\" | \")), sep = \"\\n\")\r\n    ```\r\n\r\n```{r createtable, results='asis', echo=FALSE}\r\ncat(\"x | y\", \"--- | ---\", sep=\"\\n\")\r\ncat(apply(df, 1, function(X) paste(X, collapse=\" | \")), sep = \"\\n\")\r\n```\r\n\r\n### Control output display\r\nThe folllowing code supresses display of R input commands (i.e., `echo=FALSE`)\r\nand removes any preceding text from console output (`comment=\"\"`; the default is `comment=\"##\"`).\r\n\r\n    ```{r echo=FALSE, comment=\"\", echo=FALSE}\r\n    head(df)\r\n    ```\r\n\r\n```{r echo=FALSE, comment=\"\", echo=FALSE}\r\nhead(df)\r\n```\r\n\r\n\r\n\r\n### Control figure size\r\nThe following is an example of a smaller figure using `fig.width` and `fig.height` options.\r\n\r\n    ```{r , fig.width=3, fig.height=3}\r\n    plot(x)\r\n    ```\r\n\r\n```{r smallplot, fig.width=3, fig.height=3}\r\nplot(x)\r\n```\r\n\r\n### Cache analysis\r\nCaching analyses is straightforward.\r\nHere's example code.\r\nOn the first run on my computer, this took about 10 seconds.\r\nOn subsequent runs, this code was not run.\r\n\r\nIf you want to rerun cached code chunks, just [delete the contents of the `cache` folder](http://stackoverflow.com/a/10629121/180892)\r\n\r\n    ```{r , cache=TRUE}\r\n    for (i in 1:5000) {\r\n        lm((i+1)~i)\r\n    }\r\n    ```\r\n\r\n## Basic markdown functionality\r\nFor those not familiar with standard [Markdown](http://daringfireball.net/projects/markdown/), the following may be useful.\r\nSee the source code for how to produce such points. However, RStudio does include a Markdown quick reference button that adequatly covers this material.\r\n\r\n### Dot Points\r\nSimple dot points:\r\n\r\n* Point 1\r\n* Point 2\r\n* Point 3\r\n\r\nand numeric dot points:\r\n\r\n1. Number 1\r\n2. Number 2\r\n3. Number 3\r\n\r\nand nested dot points:\r\n\r\n* A\r\n    * A.1\r\n    * A.2\r\n* B\r\n    * B.1\r\n    * B.2\r\n\r\n\r\n### Equations\r\nEquations are included by using LaTeX notation and including them either between single dollar signs (inline equations) or double dollar signs (displayed equations).\r\nIf you hang around the Q&A site [CrossValidated](http://stats.stackexchange.com) you'll be familiar with this idea.\r\n\r\nThere are inline equations such as $y_i = \\alpha + \\beta x_i + e_i$.\r\n\r\nAnd displayed formulas:\r\n\r\n$$\\frac{1}{1+\\exp(-x)}$$\r\n\r\n\r\nknitr provides self-contained HTML code that calls a Mathjax script to display formulas.\r\nHowever, in order to include the script in my blog posts I [took the script](https://gist.github.com/2716053) and incorporated it into my blogger template.\r\nIf you are viewing this post through syndication or an RSS reader, this may not work.\r\nYou may need to view this post on my website.\r\n\r\n### Tables\r\nTables can be included using the following notation\r\n\r\nA  | B | C\r\n--- | --- | ---\r\n1  | Male | Blue\r\n2  | Female | Pink\r\n\r\n### Hyperlinks\r\n\r\n* If you like this post, you may wish to subscribe to [my RSS feed](http://feeds.feedburner.com/jeromyanglim).\r\n\r\n### Images\r\nHere's an example image:\r\n\r\n![image from redmond barry building unimelb](http://i.imgur.com/RVNmr.jpg)\r\n\r\n\r\n### Code\r\nHere is Markdown R code chunk displayed as code:\r\n\r\n    ```{r}\r\n    x <- 1:10\r\n    x\r\n    ```\r\n\r\n\r\n\r\nAnd then there's inline code such as `x <- 1:10`.\r\n\r\n### Quote\r\nLet's quote some stuff:\r\n\r\n> To be, or not to be, that is the question:\r\n> Whether 'tis nobler in the mind to suffer\r\n> The slings and arrows of outrageous fortune,\r\n\r\n\r\n## Conclusion\r\n\r\n* R Markdown is awesome.\r\n    * The ratio of markup to content is excellent.\r\n    * For exploratory analyses, blog posts, and the like R Markdown will be a powerful productivity booster.\r\n    * For journal articles, LaTeX will presumably still be required.\r\n* The RStudio team have made the whole process very user friendly.\r\n    * RStudio provides useful shortcut keys for compiling to HTML, and running code chunks. These shortcut keys are presented in a clear way.\r\n    * The incorporated extensions to Markdown, particularly formula and table support, are particularly useful.\r\n    * Jump-to-chunk feature facilitates navigation. It helps if your code chunks have informative names.\r\n    * Code completion on R code chunk options is really helpful. See also [chunk options documentation on the knitr website](http://yihui.name/knitr/options).\r\n* Other recent posts on R markdown include those by :\r\n     * [Christopher Gandrud](http://christophergandrud.blogspot.com.au/2012/05/dynamic-content-with-rstudio-markdown.html)\r\n     * [Markcus Gesmann](http://lamages.blogspot.com.au/2012/05/interactive-reports-in-r-with-knitr-and.html)\r\n     * [Rstudio on R Markdown](http://rstudio.org/docs/authoring/using_markdown)\r\n     * [Yihui Xie](http://yihui.name/knitr/): I really want to thank him for developing `knitr`.\r\n     He has also posted [this example of R Markdown](https://github.com/yihui/knitr/blob/master/inst/examples/knitr-minimal.Rmd).\r\n\r\n\r\n## Questions\r\nThe following are a few questions I encountered along the way that might interest others.\r\n### Annoying `<br/>`'s\r\n**Question:** I asked on the Rstudio discussion site:\r\n[Why does Markdown to HTML insert `<br/>` on new lines?](http://support.rstudio.org/help/discussions/problems/2329-why-does-r-markdown-to-html-insert-br-when-there-is-a-new-line-of-text)\r\n\r\n**Answer:** I just do a find and delete on this text for now.\r\n\r\n### Temporarily disable caching\r\n**Question:** I asked on StackOverflow about\r\n[How to set cache=FALSE for a knitr markdown document and override code chunk settings?](http://stackoverflow.com/q/10628665/180892)\r\n\r\n**Answer:**  Delete the cache folder. But there are other possible workflows.\r\n\r\n### Equivalent of Sexpr\r\n**Question:** I asked on Stack Overvlow about [whether there an R Markdown equivalent to Sexpr in Sweave?](http://stackoverflow.com/q/10629416/180892).\r\n\r\n**Answer:** Include the code between brackets of \"backick r space\" and \"backtick\".\r\nE.g., in the source code I have calculated 2 + 2 = `r 2 + 2` .\r\n",
 "date":"Jeudi, 1 Juin 2017",
 "preview" : "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt."
  }
  ]
